import pathlib

mapping = {}

drivers = pathlib.Path("lib/zephyr/drivers")
for p in drivers.glob("**/*.c"):
    for line in p.open():
        if line.startswith("#define DT_DRV_COMPAT"):
            compat = line.rsplit(None, 1)[-1].strip()
            driver = str(p.parent.relative_to(drivers))
            print(compat, "->", driver)
            mapping[compat] = driver

with open("cptools/compat2driver.py", "w") as f:
    f.write("# This file was generated by gen_compat2driver.py\n")
    f.write("COMPAT_TO_DRIVER = {\n")
    # Replaces make it pass lint.
    last_driver = None
    for key in sorted(mapping.keys(), key=lambda x: (mapping[x], x)):
        driver = mapping[key]
        if driver != last_driver:
            if last_driver:
                f.write("    #\n")
            f.write(f"    # {driver}\n")
            last_driver = driver
        f.write(f'    "{key}": "{mapping[key]}",\n')
    f.write("}\n")
